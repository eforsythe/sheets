const API_KEY = '94bdd534d41832548d411a4cf2018d22';
const FORM_ID = '243466180372053';
const DRIVE_FOLDER_NAME = 'Voice Recordings';

function downloadVoiceRecordings() {
  const folder = getOrCreateFolder(DRIVE_FOLDER_NAME);
  const apiUrl = `https://api.jotform.com/form/${FORM_ID}/submissions?apiKey=${API_KEY}`;
  const response = UrlFetchApp.fetch(apiUrl);
  const data = JSON.parse(response.getContentText());

  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const headers = sheet.getDataRange().getValues()[0];

  const personIdIndex = headers.indexOf('Person ID');
  const voiceUrlIndex = headers.indexOf('Voice Recorder');
  let downloadedIndex = headers.indexOf('Downloaded');

  // Create a "Downloaded" column if it doesn't exist
  if (downloadedIndex === -1) {
    downloadedIndex = headers.length;
    sheet.getRange(1, downloadedIndex + 1).setValue('Downloaded');
  }

  const rows = sheet.getDataRange().getValues();

  for (let i = 1; i < rows.length; i++) {
    const personId = rows[i][personIdIndex];
    const voiceUrl = rows[i][voiceUrlIndex];
    const alreadyDownloaded = rows[i][downloadedIndex];

    if (voiceUrl && personId && alreadyDownloaded !== '✅ Downloaded') {
      try {
        const fileBlob = UrlFetchApp.fetch(voiceUrl, {
          headers: { 'APIKEY': API_KEY }
        }).getBlob();
        folder.createFile(fileBlob.setName(`${personId}.wav`));
        Logger.log(`✅ Downloaded: ${personId}.wav`);
        sheet.getRange(i + 1, downloadedIndex + 1).setValue('✅ Downloaded');
      } catch (err) {
        Logger.log(`❌ Error for ${personId}: ${err}`);
        sheet.getRange(i + 1, downloadedIndex + 1).setValue('❌ Failed');
      }
    }
  }

  SpreadsheetApp.getUi().alert('Download complete!');
}

function getOrCreateFolder(folderName) {
  const folders = DriveApp.getFoldersByName(folderName);
  return folders.hasNext() ? folders.next() : DriveApp.createFolder(folderName);
}

function onOpen() {
  SpreadsheetApp.getUi().createMenu("📥 Voice Tools")
    .addItem("Download Recordings", "downloadVoiceRecordings")
    .addToUi();
}
